apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gameserver.fullname" . }}
  labels:
    {{- include "gameserver.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "gameserver.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gameserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gameserver.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: ["/bin/bash", "-c"]
          args:
            - exec {{ .Values.command }}
          {{- else }}
          command: ["/bin/bash", "-c"]
          args:
            - |
              if [ -n "$GAME_TO_RUN" ]; then
                # 如果指定了游戏，则直接运行
                exec /home/steam/scripts/start_server.sh "$GAME_TO_RUN" $GAME_ARGS
              else
                # 否则启动菜单，但确保容器不会崩溃
                /home/steam/scripts/entrypoint.sh &
                # 保持容器运行
                while true; do
                  sleep 3600
                done
              fi
          {{- end }}
          {{- if .Values.interactiveTerminal.enabled }}
          stdin: true
          tty: true
          {{- end }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
            {{- range .Values.extraPorts }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
          env:
            {{- if kindIs "map" .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $value.name }}
              value: {{ $value.value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: game-data
              mountPath: {{ .Values.persistence.gameDataMountPath }}
            - name: game-file
              mountPath: {{ .Values.persistence.gameFileMountPath }}
            - name: game-file
              mountPath: /home/steam/.local
            {{- end }}
            {{- if and .Values.persistence.enabled (hasKey .Values.persistence "gameEnvironmentMountPath") }}
            - name: game-environment
              mountPath: {{ .Values.persistence.gameEnvironmentMountPath }}
            {{- end }}
            {{- if and .Values.persistence.enabled (hasKey .Values.persistence "gameBackupMountPath") }}
            - name: game-backup
              mountPath: {{ .Values.persistence.gameBackupMountPath }}
            {{- end }}
            {{- if and .Values.persistence.enabled (hasKey .Values.persistence "gamefrpcConfigPath") }}
            - name: game-frpc-config
              mountPath: {{ .Values.persistence.gamefrpcConfigPath }}
              subPath: frpc.toml
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: game-data
          persistentVolumeClaim:
            claimName: {{ include "gameserver.fullname" . }}-game-data
        - name: game-file
          persistentVolumeClaim:
            claimName: {{ include "gameserver.fullname" . }}-game-file
        {{- if hasKey .Values.persistence "gameEnvironmentMountPath" }}
        - name: game-environment
          persistentVolumeClaim:
            claimName: {{ include "gameserver.fullname" . }}-game-environment
        {{- end }}
        {{- if hasKey .Values.persistence "gameBackupMountPath" }}
        - name: game-backup
          persistentVolumeClaim:
            claimName: {{ include "gameserver.fullname" . }}-game-backup
        {{- end }}
        {{- if hasKey .Values.persistence "gamefrpcConfigPath" }}
        - name: game-frpc-config
          configMap:
            name: {{ include "gameserver.fullname" . }}-frpc-config
        {{- end }}
      {{- end }} 